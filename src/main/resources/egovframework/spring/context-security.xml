<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:b="http://www.springframework.org/schema/b"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation=" http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd "> 

    <security:http auto-config="true" use-expressions="true"
		create-session="never" access-denied-page="/denied.do">
        <security:intercept-url pattern="/admin*" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/manage*" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/add*" access="hasRole('ROLE_ADMIN')"/>
        <security:form-login 
        		login-processing-url="/j_spring_security_check"
        		default-target-url="/admin-main.do"
 				authentication-failure-url="/loginAdminView.do?error=true"
        		login-page="/loginAdminView.do"
        		always-use-default-target="false" />

    </security:http>
        <!-- 
        <form-login 
            login-page="/users/login" 
            authentication-failure-url="/users/login?error=1" 
            default-target-url="/bbs/list?boardCd=free&amp;page=1" />
        
        <logout 
            logout-success-url="/users/login" 
            invalidate-session="true"  /> -->
         
<!-- 
    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service 
                data-source-ref="dataSource"
                users-by-username-query="SELECT email as username,passwd as password,1 as enabled 
                    FROM member WHERE email = ?"
                authorities-by-username-query="SELECT email as username,authority 
                    FROM authorities WHERE email = ?" />
        </authentication-provider>
    </authentication-manager>
 -->
	<beans:bean id="userService" class="egovframework.example.login.service.impl.LoginServiceImpl"/>
	<beans:bean id="customAuthenticationProvider" class="egovframework.example.login.CustomAuthenticationProvider" />

 <security:authentication-manager >
	<security:authentication-provider user-service-ref="userService">
			</security:authentication-provider>
			<security:authentication-provider ref="customAuthenticationProvider" />

	</security:authentication-manager>
<!-- 	<bean id="encoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />

		<property name="userPropertyToUse" value="username" />
	</bean> --><!-- 
 <security:authentication-manager >
	<security:authentication-provider user-service-ref="jdbcUserService">
			<security:user-service-ref="jdbcUserService">
		<security:user name="gg" password="123" authorities="ROLE_USER" />
		<security:user name="bob" password="bobspassword" authorities="ROLE_USER" />
	</security:user-service>
	</security:authentication-provider>
 </security:authentication-manager> -->
 
 <beans:bean id="jdbcUserService"
		class="egovframework.rte.fdl.security.userdetails.jdbc.EgovJdbcUserDetailsManager" >
	<beans:property name="usersByUsernameQuery" value="SELECT MEMBER_ID, PASSWORD FROM LIBRO_MEMBER WHERE MEMBER_ID = ?"/>
	<beans:property name="authoritiesByUsernameQuery" value="SELECT AUTHORITY FROM LIBRO_AUTHORITIES WHERE MEMBER_ID = ?"/>
	<beans:property name="dataSource" ref="dataSource"/>
	<beans:property name="mapClass" value="egovframework.example.login.EgovUserDetailsMapping"/>
</beans:bean>
<!-- 
 <security:authentication-manager>
        <security:authentication-provider>
            <security:jdbc-user-service 
                data-source-ref="dataSource"
                authorities-by-username-query="SELECT AUTHORITY 
                    FROM LIBRO_AUTHORITIES WHERE MEMBER_ID = ?" />
        </security:authentication-provider>
</security:authentication-manager>
 -->
</beans:beans>